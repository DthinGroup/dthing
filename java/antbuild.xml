<?xml version="1.0" encoding="UTF-8"?>
<project name="Custom Ant Build" default="all" basedir="." xmlns:if="ant:if">
    <property file="antbuild.properties" />
    <property name="output.dir" location="${basedir}/bin" />
    <property name="classes.dir" location="${basedir}/bin" />
    <property name="dex.out" location="${output.dir}/classes.dex" />
    <property name="dex.header.src" location="${basedir}/../vm/inc/dalvik_core.h" />
    <property name="dex.header.out" location="${output.dir}/dalvik_core.h" />
    <property name="kni.header.src" location="${basedir}/../vm/inc/nativeMethods.h" />
    <property name="kni.header.out" location="${output.dir}/nativeMethods.h" />
    <property name="java.src" location="${basedir}/src" />
	<property name="third.party.src" location="${basedir}/tp_src" />
	<property name="third.party.output.dir" location="${basedir}/tp_bin" />

    <macrodef name="updateFileIfNecessary">
        <attribute name="srcFile" />
        <attribute name="dstFile" />
        <attribute name="updateMsg" />
        <sequential>
            <condition property="do_update">
                <not>
                    <filesmatch file1="@{srcFile}" file2="@{dstFile}" />
                </not>
            </condition>
            <copy if:true="${do_update}" file="@{srcFile}" tofile="@{dstFile}" />
            <echo if:true="${do_update}" message="@{updateMsg}" />
        </sequential>
    </macrodef>

    <target name="buildJava">
        <mkdir dir="${output.dir}" />
        <javac includeantruntime="no" includeJavaRuntime="yes" srcdir="${java.src}" destdir="${output.dir}" source="1.6" target="1.6">
            <compilerarg line="-encoding UTF-8"/>
        </javac>
        <jar jarfile="${output.dir}/../df.jar" basedir="${output.dir}" excludes="*.h,*.dex,*.c"/>
    </target>


    <path id="core.framework.classpath">
        <fileset dir="${basedir}">  
            <include name="df.jar" />  
        </fileset> 
    </path> 

    <target name="buildTPJava">
        <mkdir dir="${third.party.output.dir}" />
        <javac includeantruntime="no" includeJavaRuntime="yes" srcdir="${third.party.src}" destdir="${third.party.output.dir}" source="1.6" target="1.6">
            <compilerarg line="-encoding UTF-8"/>
            <classpath refid="core.framework.classpath" />
        </javac>
        <jar jarfile="${output.dir}/../df_tp.jar" basedir="${third.party.output.dir}"/>
    </target>

    <target name="mergeJars">
        <jar destfile="df_all.jar">
            <zipfileset src="df.jar"/>
            <zipfileset src="df_tp.jar"/>
        </jar>
    </target>

    <target name="createDex">
        <echo message="${dx_tool} --verbose --core-library --dex --output=${dex.out} ${classes.dir}" />
        <exec executable="${dx_tool}" failonerror="true">
            <arg value="--verbose" />
            <arg value="--core-library" />
            <arg value="--dex" />
            <arg value="--output=${dex.out}" />
            <arg value="${basedir}/df_all.jar" />
        </exec>
    </target>

    <target name="createDexHeader">
        <echo message="${basedir}>perl gencarray.pl ${dex.out} ${dex.header.out}" />
        <exec executable="perl" dir="${basedir}" failonerror="true">
            <arg value="gencarray.pl" />
            <arg value="${dex.out}" />
            <arg value="${dex.header.out}" />
        </exec>
        <updateFileIfNecessary srcFile="${dex.header.out}" dstFile="${dex.header.src}" updateMsg="update ${dex.header.src}" />
        <delete file="${basedir}/df_all.jar" />
    </target>

    <target name="createKniHeaders">
        <echo message="${basedir}>${PY_CMD} gen_kni_headers.py -f ${kni.header.src} -d ${output.dir} -s ${java.src}" />
        <exec executable="${PY_CMD}" dir="${basedir}" failonerror="true">
            <arg value="gen_kni_headers.py" />
            <arg value="-f" />
            <arg value="${kni.header.src}" />
            <arg value="-d" />
            <arg value="${output.dir}" />
            <arg value="-s" />
            <arg value="${java.src}" />
            <arg value="-t" />
            <arg value="${third.party.src}" />
        </exec>
        <updateFileIfNecessary srcFile="${kni.header.out}" dstFile="${kni.header.src}" updateMsg="WARNING: ${kni.header.src} has been updated, please update other KNI declarations headers by referring headers under ${output.dir}!" />
    </target>

    <target name="cleantp">
        <delete file="${basedir}/df_all.jar" />
        <delete file="${basedir}/df_tp.jar" />
        <delete>
            <fileset dir="${output.dir}" includes="**/*.class" />
        </delete>
    </target>

    <target name="clean">
        <delete file="${dex.out}" />
        <delete>
            <fileset dir="${output.dir}" includes="*.h,**/*.class" />
        </delete>
    </target>

    <target name="all" depends="buildJava, buildTPJava, mergeJars, createDex, createDexHeader, createKniHeaders" />
    <target name="tp" depends="buildTPJava, mergeJars, createDex, createDexHeader" />
    <target name="cleanbuild" depends="clean, all" />

</project>
